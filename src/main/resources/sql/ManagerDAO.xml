<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.varchar.www.model.dao.ManagerDAO">

<!-- 강사 목록을 불러오는 쿼리문 입니다. -->
	<select id="getManagerTeacherList" resultType="com.varchar.www.model.domain.teacher.Teacher">
		<![CDATA[
			SELECT 
				* 
			FROM
				(SELECT rownum rn, au.*, a.authority_name FROM academy_user au INNER JOIN authority a ON a.authority_code = au.authority_code  
				WHERE a.authority_code = #{authority_code} AND rownum <= #{cri.pageNum} * #{cri.amount})
			WHERE rn > (#{cri.pageNum} - 1) * #{cri.amount} 
		]]>
	</select>
<!-- 시즌을 불러오는 쿼리문 입니다. -->
	<select id="getSeasonList" resultType="com.varchar.www.model.domain.manager.Season">
		SELECT * FROM season
	</select>
	
	<!-- 원장이 자신의 정보를 조회 -->
	<select id="getManagerInfo" parameterType="String" resultType="com.varchar.www.model.domain.teacher.Teacher">
		SELECT
			academy_user.*,
			to_char(academy_user.user_birth, 'yyyy-MM-dd') AS user_birth_enco
		FROM academy_user WHERE authority_code = #{authorityCode}
	</select>
	<!-- 원장의 강사조회(경력부분) -->
	<!-- 경력은 여러 행 나올 수 있어 따로 가져와서 나열합니다. -->
	<select id="getManagerCareer" parameterType="String" resultType="com.varchar.www.model.domain.manager.CareerVO">
		SELECT * FROM career WHERE user_id = #{userId}	
	</select>
	
	<!--  원장 메인  최근 6개월 수입 통계 -->
	<select id="">
	
	SELECT TO_CHAR( academy_payment.payment_date,'yy-MM' ) ,
	DECODE(lecture.user_id , NULL, '합계',lecture.user_id), SUM(lecture.lecture_cost)   from academy_payment
	INNER JOIN LECTURE ON academy_payment.lecture_code = lecture.lecture_code
	WHERE academy_payment.payment_date > ADD_MONTHS(TO_CHAR(SYSDATE,'YY-MM-DD') , -6)
	GROUP BY ROLLUP ( TO_CHAR( academy_payment.payment_date,'yy-MM') ,lecture.user_id  ) 
	
	</select>
	
	
<!-- select TO_CHAR( academy_payment.payment_date,'YY-MM-DD' ) ,
DECODE(lecture.user_id , NULL, '합계',lecture.user_id), SUM(lecture.lecture_cost)   from academy_payment
INNER JOIN LECTURE ON academy_payment.lecture_code = lecture.lecture_code
WHERE academy_payment.payment_date < ADD_MONTHS(TO_CHAR(SYSDATE,'YY-MM-DD') , -7)
group by ROLLUP ( TO_CHAR( academy_payment.payment_date,'YY-MM-DD') ,lecture.user_id  ) ;
 -->	
	
	
	
	<!-- 원장이 자신의 정보를 수정 -->
	<update id="updateManagerInfo" parameterType="com.varchar.www.model.domain.teacher.TeacherVO">
		UPDATE 
			academy_user
		SET
			user_name = #{userName},
			user_tel = #{userTel},
			user_birth = #{userBirth},
			user_email = #{userEmail},
			user_address = #{userAddress},
			user_remark = #{userRemark},
			user_image = #{userImage},
			user_registration = #{userRegistration}
		WHERE
			user_id = #{userId}
	</update>
	
	
	
</mapper>

